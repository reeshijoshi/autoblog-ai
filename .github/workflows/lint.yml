name: Lint

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_call:

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  golangci:
    name: golangci-lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25.3"
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.5.0
          args: --timeout=5m --config=.golangci.yml
          skip-cache: true

      - name: Run go vet
        run: go vet ./...

      - name: Run go fmt check
        run: |
          if [ -n "$(gofmt -s -l .)" ]; then
            echo "The following files are not formatted:"
            gofmt -s -l .
            exit 1
          fi

  tests:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25.3"
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./internal/...

      - name: Generate coverage report
        run: go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.out
            coverage.html
          retention-days: 30

      - name: Check test coverage
        run: |
          COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
          echo "Total coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 50" | bc -l) )); then
            echo "Coverage is below 50%"
            exit 1
          fi

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25.3"
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Build binary
        run: |
          go build -v -ldflags "-X main.Version=dev" -o autoblog-ai .

      - name: Check binary
        run: |
          file autoblog-ai
          ls -lh autoblog-ai
