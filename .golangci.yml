# golangci-lint configuration
# https://golangci-lint.run/usage/configuration/

version: 2

run:
  timeout: 5m
  tests: true
  modules-download-mode: readonly

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  sort-results: true

linters:
  enable:
    # Default linters
    - errcheck       # Check for unchecked errors
    - govet          # Reports suspicious constructs
    - ineffassign    # Detect ineffectual assignments
    - staticcheck    # Go static analysis (includes gosimple)
    - unused         # Check for unused code

    # Additional recommended linters
    - misspell       # Check for misspelled English words
    - revive         # Replacement for golint and stylecheck
    - unconvert      # Remove unnecessary type conversions
    - unparam        # Reports unused function parameters
    - whitespace     # Detection of leading/trailing whitespace
    - gocyclo        # Cyclomatic complexity
    - dupl           # Code clone detection
    - goconst        # Find repeated strings that could be constants
    - gosec          # Security issues
    - prealloc       # Find slice declarations that could be preallocated
    - copyloopvar    # Check for loop variable copying (replaces exportloopref)
    - nilerr         # Find code that returns nil even if error is not nil

  disable:
    - exhaustive     # Too strict for switches
    - exhaustruct    # Too strict for struct initialization
    - varnamelen     # Variable name length is subjective
    - wrapcheck      # Too strict for error wrapping
    - nlreturn       # Too opinionated about newlines
    - wsl            # Too opinionated about whitespace

linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: false

  govet:
    check-shadowing: true
    enable-all: true

  gocyclo:
    min-complexity: 15

  dupl:
    threshold: 100

  goconst:
    min-len: 3
    min-occurrences: 3

  misspell:
    locale: US

  unused:
    check-exported: false

  unparam:
    check-exported: false

  gosec:
    # Exclude some rules that are too strict
    excludes:
      - G104  # Audit errors not checked (covered by errcheck)
      - G304  # File path provided as taint input (too many false positives)

  revive:
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: exported
      - name: if-return
      - name: increment-decrement
      - name: var-naming
      - name: var-declaration
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: unexported-return
      - name: indent-error-flow
      - name: errorf
      - name: empty-block
      - name: superfluous-else
      - name: unused-parameter
      - name: unreachable-code
      - name: redefines-builtin-id

issues:
  # Maximum issues count per one linter
  max-issues-per-linter: 50

  # Maximum count of issues with the same text
  max-same-issues: 3

  # Exclude some linters from running on tests files
  exclude-rules:
    # Exclude some linters from running on tests
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - goconst

    # Exclude known issues in generated code
    - path: '(.+)_gen\.go'
      linters:
        - gocyclo
        - dupl
        - gosec

    # Exclude shadow checking on the err variable
    - text: "declaration of \"err\" shadows declaration"
      linters:
        - govet

  # Independently of option `exclude` we use default exclude patterns
  exclude-use-default: false

  # Show only new issues
  new: false
